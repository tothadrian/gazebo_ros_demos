<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!--start RVIZ-->
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find rrbot_gazebo)/rviz/config_file.rviz" />

  <!--median filtering and removing points of conveyor belt (built in ros function)-->        
  <node pkg="laser_filters" type="scan_to_scan_filter_chain"
      name="laser_filter" output="screen">
    <rosparam command="load" file="$(find rrbot_gazebo)/my_laser_filter.yaml" />
    <remap from="scan" to="scan" />      
  </node>

  <!--assembles scans in a rolling buffer without publishing it (built in ros function)-->
  <node type="laser_scan_assembler" pkg="laser_assembler"
        name="my_assembler">
    <remap from="scan" to="scan_filtered"/>
    <param name="max_scans" type="int" value="9000" />
    <param name="fixed_frame" type="string" value="conveyor_reference" />
  </node>

  <!--this node calls the assemble_scans2 service after every "duration" and publishes a sensor_msgs/pointcloud2 to assembled_cloud-->
  <node pkg="rrbot_gazebo" type="periodic_snapshotter"
          name="periodic_snapshotter" >
    <param name="duration" type="double" value="0.1" />
  </node>

  <!--converts a sensor_msgs/poinctcloud2 to pcl::PCLPointCloud2 and filters it-->
  <node pkg="rrbot_gazebo" type="pcl_filter"
          name="pcl_filter"
          output="screen" >
    <param name="frequency" type="int" value="10" />
    <param name="source_frame" type="string" value="laser" />
    <param name="target_frame" type="string" value="conveyor_reference" />
    <param name="max_dist" type="double" value="2.0" />
  </node>    

   <!--projects the points in the pointcloud to the image frame and colors them accordingly-->
   <node pkg="rrbot_gazebo" type="color_pc"
          name="color_pc"
          output="screen" >
    <param name="source_frame" type="string" value="conveyor_reference" />
    <param name="target_frame" type="string" value="camera"/>
    <param name="camera_topic" type="string" value="/belt_camera/image_raw"/>
  </node>   
   

</launch>
